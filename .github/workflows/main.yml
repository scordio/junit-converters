name: CI

on: [push, pull_request]

permissions: {}

env:
  MAVEN_ARGS: -B -V -ntp -e -Djansi.passthrough=true -Dstyle.color=always

jobs:

  java-21:

    name: Java 21 (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5
      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: maven
      - name: Test
        run: ./mvnw $MAVEN_ARGS verify

  java-oracle:

    name: Java ${{ matrix.java }}
    strategy:
      fail-fast: false
      matrix:
        java: [25, 26]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - name: Set up Java
        uses: oracle-actions/setup-java@v1
        with:
          website: jdk.java.net
          release: ${{ matrix.java }}
          version: latest
      - name: Test
        run: ./mvnw $MAVEN_ARGS verify

  junit-framework:

    name: JUnit Framework ${{ matrix.junit-framework }}
    strategy:
      fail-fast: false
      matrix:
        junit-framework: [ 5.13.5-SNAPSHOT]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: maven
      - name: Test
        run: ./mvnw $MAVEN_ARGS -Psnapshots -Djunit-framework.version=${{ matrix.junit-framework }} verify

  javadoc:

    name: Javadoc
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: maven
      - name: Generate Javadoc
        run: ./mvnw $MAVEN_ARGS compile javadoc:javadoc
